library(tidyr)
library(dplyr)
library(ggplot2)
# Carga el dataset como dataframe (el valor 999 es nulo) y muestra sus primeras filas, su resúmen estadístico y la estructura de sus columnas.
df <- read.csv("IBM.csv", header = TRUE, na.strings = 999)
head(df)
summary(df)
str(df)
# Reeemplaza todos los valores nulos de la columna "Open", por su mediana
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = TRUE)
summary(df)
# Divide la columna "Date" en "Dia", "Mes" y "Año".
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
# Cambia la columna Año a factor.
df$Año <- as.factor(df$Año)
# Devuelve el precio más alto de cada año.
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High)) %>% arrange(max_año)
# Muestra una tabla de frecuencias para cada año.
table(df$Año)
# Obtén una nueva columna que se llame "Diferencias" y que se el resultado de restar al precio más alto el precio más bajo.
df$Diferencia <- df$High - df$Low
summary(df)
# Ordena el dataset por la columna diferencia de forma ascendente
df <- df[order(df$Diferencia), ]
#  Muestra un resúmen estadístico del dataset en función de los siguientes valores por cada año:
#   + Precio más alto de apertura.
#   + Precio más bajo de cierre.
#   + Media de la columna "Diferencia".
#   + Número de elementos para cada año.
df %>% select(Año, Open, Close, Diferencia) %>% group_by(Año) %>%
summarise(
max_apertura = max(Open),
min_close = min(Close),
mean_diff = mean(Diferencia),
elem_anual= n()
)
# Muestra el sumatorio de la variable Volumen para todos los años.
tapply(df$Volume, df$Año, sum)
# Obtén dos histogramas para las variables de precio de apertura y cierre, rellena los histogramas en función del año.
ggplot(df) +
geom_histogram(mapping = aes(x = Open, fill = Año))
ggplot(df) +
geom_histogram(mapping = aes(x = Close, fill = Año))
# Muestra un diagrama de dispersión entre los precios más altos y más bajos, además muestra su recta de ajuste.
ggplot(df) +
geom_point(mapping = aes(x = High, y = Low)) + geom_smooth(aes(x = High, y = Low), method = lm)
# Obtén un diagrama de caja y bigotes de la variable Adj.Close por año.
ggplot(df) +
geom_boxplot(mapping = aes(x = Adj.Close, fill = Año)) + coord_flip()
# Muestra para cada año un diagrama de densidad para la variable "Volume".
ggplot(df) +
geom_density(mapping = aes(Volume, colour = Año)) + facet_wrap(~Año)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
str(df)
head(df)
summary(df)
str(df)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
summary(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
head(df)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
df$Año <- as.factor(df$Año)
str(df)
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High)) %>% arrange(max_año)
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High))
table(df)
table(df$Año)
head(df)
df$Diferencia <- df$High - df$Low
head(df)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
df$Año <- as.factor(df$Año)
str(df)
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High))
table(df$Año)
df$Diferencia <- df$High - df$Low
head(df)
df$Diferencias <- df$High - df$Low
head(df)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
df$Año <- as.factor(df$Año)
str(df)
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High))
table(df$Año)
df$Diferencias <- df$High - df$Low
head(df)
summary(df)
df %>% arrange(df,Diferencias)
df <- arrange(df,Diferencias)
df
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
df$Año <- as.factor(df$Año)
str(df)
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High))
table(df$Año)
df$Diferencias <- df$High - df$Low
summary(df)
df <- arrange(df,Diferencias)
df
head(df)
df %>% select(Open, Close, Diferencia, Año) %>% group_by(Año) %>% summarise(
max_apertura = max(Open),
min_cierre = min(Close),
media_diferencia = mean(Diferencia),
elementos_año = n()
)
df %>% select(Open, Close, Diferencias, Año) %>% group_by(Año) %>% summarise(
max_apertura = max(Open),
min_cierre = min(Close),
media_diferencia = mean(Diferencia),
elementos_año = n()
)
df %>% select(Open, Close, Diferencias, Año) %>% group_by(Año) %>% summarise(
max_apertura = max(Open),
min_cierre = min(Close),
media_diferencia = mean(Diferencias),
elementos_año = n()
)
tapply(df$Volume, df$Año, sum)
ggplot(df) +
geom_histogram(mapping = aes(Open, fill = Año)
ggplot(df) +
geom_histogram(mapping = aes(Open, fill = Año))
ggplot(df) +
geom_histogram(mapping = aes(Open, fill = Año)) +
ggtitle("Apertura ~Año")
ggplot(df) +
geom_histogram(mapping = aes(Open, fill = Año)) +
ggtitle("Apertura ~Año")
ggplot(df) +
geom_histogram(mapping = aes(Close, fill = Año)) +
ggtitle("Cierre ~Año")
ggplot(df) +
geom_point(mapping = aes(x = High, y = Low)) +
geom_smooth(aes(x =High, y = Low), method = lm)
ggplot(df) +
geom_boxplot(mapping = aes(x = Adj.CLose, fill = Año, outlier = "blue"))
ggplot(df) +
geom_boxplot(mapping = aes(x = Adj.Close, fill = Año, outlier = "blue"))
ggplot(df) +
geom_boxplot(mapping = aes(x = Adj.Close, fill = Año)) + coord_flip(())
ggplot(df) +
geom_boxplot(mapping = aes(x = Adj.Close, fill = Año)) + coord_flip()
ggplot(df) +
geom_density(mapping = aes(Volume)) +
facet_wrap(Año)
ggplot(df) +
geom_density(mapping = aes(Volume)) +
facet_wrap(~Año)
ggplot(df) +
geom_density(mapping = aes(Volume, colour = Año)) +
facet_wrap(~Año)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("IBM.csv", header = T, na.strings = 999)
head(df)
summary(df)
str(df)
df$Open[which(is.na(df$Open))] <- median(df$Open, na.rm = T)
summary(df)
df <- separate(df, Date, into = c("Dia", "Mes", "Año"), sep = "/")
head(df)
colnames(df)
df$Año <- as.factor(df$Año)
str(df)
df %>% select(Año, High) %>% group_by(Año) %>% summarise(max_año = max(High))
table(df$Año)
df$Diferencias <- df$High - df$Low
summary(df)
df <- arrange(df,Diferencias)
head(df)
df %>% select(Open, Close, Diferencias, Año) %>% group_by(Año) %>% summarise(
max_apertura = max(Open),
min_cierre = min(Close),
media_diferencia = mean(Diferencias),
elementos_año = n()
)
tapply(df$Volume, df$Año, sum)
ggplot(df) +
geom_histogram(mapping = aes(Open, fill = Año)) +
ggtitle("Apertura ~Año")
ggplot(df) +
geom_histogram(mapping = aes(Close, fill = Año)) +
ggtitle("Cierre ~Año")
ggplot(df) +
geom_point(mapping = aes(x = High, y = Low)) +
geom_smooth(aes(x =High, y = Low), method = lm)
ggplot(df) +
geom_boxplot(mapping = aes(x = Adj.Close, fill = Año)) + coord_flip()
ggplot(df) +
geom_density(mapping = aes(Volume, colour = Año)) +
facet_wrap(~Año)
